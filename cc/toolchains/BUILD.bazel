# Copyright (C) 2022 Swift Navigation Inc.
# Contact: Swift Navigation <dev@swift-nav.com>
#
# This source is subject to the license found in the file 'LICENSE' which must
# be be distributed together with this source. All other rights reserved.
#
# THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
# EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.

package(default_visibility = ["//visibility:public"])

load(":cc_toolchain_config.bzl", "cc_toolchain_config")

filegroup(name = "empty")

filegroup(
    name = "wrappers",
    srcs = glob([
        "wrappers/**",
    ]),
)

filegroup(
    name = "ar_files",
    srcs = [
        ":wrappers",
        "@llvm-distribution//:ar",
    ],
)

filegroup(
    name = "as_files",
    srcs = [
        ":wrappers",
        "@llvm-distribution//:as",
    ],
)

filegroup(
    name = "compiler_files",
    srcs = [
        ":wrappers",
        "@llvm-distribution//:clang",
        "@llvm-distribution//:include",
    ],
)

filegroup(
    name = "dwp_files",
    srcs = [
        ":wrappers",
        "@llvm-distribution//:dwp",
    ],
)

filegroup(
    name = "linker_files",
    srcs = [
        ":wrappers",
        "@llvm-distribution//:ar",
        "@llvm-distribution//:clang",
        "@llvm-distribution//:ld",
        "@llvm-distribution//:lib",
    ],
)

filegroup(
    name = "objcopy_files",
    srcs = [
        ":wrappers",
        "@llvm-distribution//:objcopy",
    ],
)

filegroup(
    name = "strip_files",
    srcs = [
        ":wrappers",
        "@llvm-distribution//:strip",
    ],
)

filegroup(
    name = "all_files",
    srcs = [
        "linker_files",
        ":compiler_files",
        "@llvm-distribution//:bin",
    ],
)

cc_toolchain_config(name = "local-x86_64-linux")

cc_toolchain(
    name = "cc-clang-x86_64-linux",
    all_files = ":all_files",
    ar_files = ":ar_files",
    as_files = ":as_files",
    compiler_files = ":compiler_files",
    dwp_files = ":dwp_files",
    linker_files = ":linker_files",
    objcopy_files = ":objcopy_files",
    strip_files = ":strip_files",
    toolchain_config = ":local-x86_64-linux",
)

toolchain(
    name = "cc-toolchain-x86_64-linux",
    exec_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
    ],
    target_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
    ],
    target_settings = None,
    toolchain = ":cc-clang-x86_64-linux",
    toolchain_type = "@bazel_tools//tools/cpp:toolchain_type",
)
